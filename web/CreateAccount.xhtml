<?xml version="1.0" encoding="UTF-8" ?>
<!--
Created by Osman Balci on 2016.04.23 
Copyright Â© 2016 Osman Balci. All rights reserved.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">

    <!-- Do not enter tags before the composition line since they are ignored by JSF -->
    <h:head>
        <!-- 
        The <title> element (a) defines a title in the browser's toolbar,
        (b) provides a title for the page when it is added to favorites, and
        (c) displays a title for the page in search-engine results.
        [http://www.w3schools.com/tags/tag_title.asp]
        If you want to change it for a page, use:
            <ui:define name="title">
                <h:outputText value="enter page title here"></h:outputText>
            </ui:define>
        -->
        <title><ui:insert name="title">Take Note</ui:insert></title>

        <!-- 
        Instruct the web browser on how to control the page's dimensions
        and scaling on mobile devices. 
        -->
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/>
        <!-- Bootstrap core CSS -->
        <link href="resources/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet"/>

        <!-- Custom fonts for this template -->
        <link href="resources/vendor/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css"/>
        <link href="https://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Cabin:700' rel='stylesheet' type='text/css'/>

        <!-- Custom styles for this template -->
        <link href="resources/css/grayscale.min.css" rel="stylesheet"/>

        <!-- Temporary navbar container fix -->
        <style>
            .navbar-toggler {
                z-index: 1;
            }
            @media (max-width: 576px) {
                nav > .container {
                    width: 100%;
                }
            }
        </style>

        <!-- 
        The siteStyles CSS file is linked for use by the entire site. 
        -->
        <h:outputStylesheet library="css" name="siteStyles.css" />

        <!-- 
        The following CSS and JavaScript files are required for the
        Image Slider, created by http://www.menucool.com, to work.
        -->
        <h:outputStylesheet library="css" name="js-image-slider.css" />
        <script src="resources/js/js-image-slider.js" type="text/javascript"></script>

        <!--
        The icons and the font-awesome.min.css styles provided by http://fontawesome.io/
        are linked for use by the entire site.
        +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        As a result of this link, a folder named Remote Files is automatically
        created in the NetBeans Projects pane containing the font-awesome.min.css file.
        +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.2/css/font-awesome.min.css" />

        <!-- 
        If you need to link an additional CSS file for a particular page, 
        you can redefine "css" in that page by using <ui:define name="css"> 
        -->
        <ui:insert name="css"/>

        <!-- 
        A favicon (short for favorite icon), also known as a shortcut icon, website icon, tab icon, 
        URL icon or bookmark icon, is a file named favicon.ico [https://en.wikipedia.org/wiki/Favicon]
        The icon is displayed to the left of the page title on a tab in the Chrome web browser.
        The link below in this template enables all pages in your site to display the favorite icon.
        
        Use absolute path for the image file since it will be referenced by all pages in the site.
        -->
        <link rel="shortcut icon" href="resources/images/favicon.ico" type="image/x-icon" />

    </h:head>

    <!-- This page is constructed based on the siteTemplate -->
    <body id="page-top">
        <ui:define name="title">
            <!-- Set the page title -->
            <h:outputText value="#{bundle.HomePageTitle}"></h:outputText>
        </ui:define>
        <nav id="mainNav" class="navbar fixed-top navbar-toggleable-md navbar-light">
            <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarExample" aria-controls="navbarExample" aria-expanded="false" aria-label="Toggle navigation">
                Menu <i class="fa fa-bars"></i>
            </button>
            <div class="container">
                <a class="navbar-brand" href="index.xhtml">Take Note</a>
                <div class="collapse navbar-collapse" id="navbarExample">

                    <ul class="navbar-nav ml-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="SignIn.xhtml">Sign-In</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="CreateAccount.xhtml">Register</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <header class="masthead">
            <div class="intro-body">
                <div class="container">
                    <div class="row">
                        <div class="col-md-8 offset-md-2">
                            <h1 class="brand-heading">Register</h1>
                            <!-- Error messages will be shown here if any -->
                            <div align="center">
                                <!-- Error messages will be shown here if any  -->
                                <p:messages id="msgs" showIcon="false"/>
                                <h:outputLabel id="form-error-message" class="errorMessages" value="#{accountManager.statusMessage}"/>

                                <h:form id="AccountCreationForm">

                                    <!-- f:event allows ComponentSystemEventListener instances on a UI component in a JSF page. 
                                    The following f:event assigns an event listener with the UI component "form" - AccountCreationForm.
                                    
                                    type="postValidate" directs the listener event to invoke the accountManager.validateInformation method
                                    AFTER the UI component "form" is validated with the validation statements included below.
                                    -->
                                    <f:event listener="#{accountManager.validateInformation}" type="postValidate"/>

                                    <p:panelGrid columns="2" columnClasses="accountColumn1, accountColumn2">

                                        <p:outputLabel value="#{bundle.CreateUserLabel_username}" for="username" />
                                        <p:inputText id="username" value="#{accountManager.username}" required="true" styleClass="accountInputTextField"
                                                     requiredMessage="#{bundle.CreateUserRequiredMessage_username}" label="Username">
                                            <!-- Execute the "validate" method in the "UsernameValidator.java" class file to validate the username entered. -->
                                            <f:validator validatorId="usernameValidator"/> 
                                        </p:inputText>

                                        <p:outputLabel value="#{bundle.CreateUserLabel_email}" for="email" />
                                        <p:inputText id="email" value="#{accountManager.email}" required="true" styleClass="accountInputTextField"
                                                     requiredMessage="#{bundle.CreateUserRequiredMessage_email}" label="Email">
                                            <f:validateLength minimum="2" />
                                            <!-- Execute the "validate" method in the "EmailValidator.java" class file to validate the email address entered. -->
                                            <f:validator validatorId="emailValidator" />  
                                        </p:inputText>


                                        <p:outputLabel value="#{bundle.CreateUserLabel_firstName}" for="firstName" />
                                        <p:inputText id="firstName" value="#{accountManager.firstName}" required="true" styleClass="accountInputTextField"
                                                     requiredMessage="#{bundle.CreateUserRequiredMessage_firstName}" label="First Name">
                                            <f:validateLength minimum="2" />
                                        </p:inputText>   

                                        <p:outputLabel value="#{bundle.CreateUserLabel_lastName}" for="lastName" />
                                        <p:inputText id="lastName" value="#{accountManager.lastName}" required="true" styleClass="accountInputTextField"
                                                     requiredMessage="#{bundle.CreateUserRequiredMessage_lastName}" label="Last Name">
                                            <f:validateLength minimum="2" />
                                        </p:inputText>  

                                        <h:outputLabel value="#{bundle.CreateUserLabel_password} *" for="password" />
                                        <p:password id="password" value="#{accountManager.password}" feedback="true" required="true" styleClass="accountInputTextField">
                                            <!-- Execute the "validate" method in the "PasswordValidator.java" class file to validate the password entered. -->
                                            <f:validator validatorId="passwordValidator" /> 
                                        </p:password>

                                        <h:outputLabel value="Confirm Password: *" for="confirmPassword" />
                                        <p:password id="confirmPassword" value="ToBeReadFromThisFieldByAccountManager" required="true" styleClass="accountInputTextField"/>

                                        <p:outputLabel value="#{bundle.CreateUserLabel_securityQuestion}" for="securityQuestion" />
                                        <p:selectOneMenu id="securityQuestion" label="Security Questions"
                                                         value="#{accountManager.securityQuestion}" required="true" >
                                            <f:selectItems value="#{accountManager.security_questions}"/>
                                        </p:selectOneMenu>

                                        <p:outputLabel value="#{bundle.CreateUserLabel_securityAnswer}" for="securityAnswer" />
                                        <p:inputText id="securityAnswer" value="#{accountManager.securityAnswer}" required="true" styleClass="accountInputTextField"
                                                     requiredMessage="#{bundle.CreateUserRequiredMessage_securityAnswer}" label="Security Answer">
                                            <f:validateLength minimum="2" />
                                        </p:inputText>

                                        <p:outputLabel value="#{bundle.CreateUserLabel_state}" for="state" />
                                        <h:selectOneMenu id="state" value="#{accountManager.state}" required="true">
                                            <f:selectItems value="#{accountManager.listOfStates}" var="state"
                                                           itemLabel="#{state}" itemValue="#{state}" />
                                        </h:selectOneMenu>

                                    </p:panelGrid>
                                    <div>
                                        &nbsp;
                                    </div>

                                    <p:commandButton class="commandButton" id="Submit" value="Submit" action="#{accountManager.createAccount()}" ajax="false" icon="ui-icon-extlink" />
                                    &nbsp; <p:button class="commandButton" outcome="index" value="Cancel" icon="ui-icon-cancel"></p:button>

                                </h:form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
    </body>
    <!-- Do not enter tags after the composition line since they are ignored by JSF -->

</html>
