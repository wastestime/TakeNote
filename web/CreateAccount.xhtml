<?xml version="1.0" encoding="UTF-8" ?>
<!--
Created by Thomas Nguyen on 2016.04.23 
Copyright Â© 2016 Take Note. All rights reserved.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">

    <!-- Do not enter tags before the composition line since they are ignored by JSF -->

    <!-- This page is constructed based on the siteTemplate -->


    <!-- Create the content for this page below -->
    <ui:composition template="template/siteTemplate.xhtml">
        <ui:define name="editableContent">
            <ui:define name="title">
                 <h:outputText value="Create Account"></h:outputText>
            </ui:define>

            <div align="center" style="width:50%; margin:0 auto;">

                <!-- Error messages will be shown here if any  -->
                <p:messages id="msgs" showIcon="false"/>
                <h:outputLabel id="form-error-message" class="errorMessages" value="#{accountManager.statusMessage}"/>

                <h:form id="AccountCreationForm">

                    <h2>Create an Account</h2>

                    <!-- f:event allows ComponentSystemEventListener instances on a UI component in a JSF page. 
                    The following f:event assigns an event listener with the UI component "form" - AccountCreationForm.
                    
                    type="postValidate" directs the listener event to invoke the accountManager.validateInformation method
                    AFTER the UI component "form" is validated with the validation statements included below.
                    -->
                    <f:event listener="#{accountManager.validateInformation}" type="postValidate"/>

                    <p:panelGrid columns="2" columnClasses="accountColumn1, accountColumn2">

                        <p:outputLabel value="#{bundle.CreateUserLabel_username}" for="username" />
                        <p:inputText id="username" value="#{accountManager.username}" required="true" styleClass="accountInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_username}" label="Username">
                            <!-- Execute the "validate" method in the "UsernameValidator.java" class file to validate the username entered. -->
                            <f:validator validatorId="usernameValidator"/> 
                        </p:inputText>

                        <p:outputLabel value="#{bundle.CreateUserLabel_email}" for="email" />
                        <p:inputText id="email" value="#{accountManager.email}" required="true" styleClass="accountInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_email}" label="Email">
                            <f:validateLength minimum="2" />
                            <!-- Execute the "validate" method in the "EmailValidator.java" class file to validate the email address entered. -->
                            <f:validator validatorId="emailValidator" />  
                        </p:inputText>


                        <p:outputLabel value="#{bundle.CreateUserLabel_firstName}" for="firstName" />
                        <p:inputText id="firstName" value="#{accountManager.firstName}" required="true" styleClass="accountInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_firstName}" label="First Name">
                            <f:validateLength minimum="2" />
                        </p:inputText>   

                        <p:outputLabel value="#{bundle.CreateUserLabel_lastName}" for="lastName" />
                        <p:inputText id="lastName" value="#{accountManager.lastName}" required="true" styleClass="accountInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_lastName}" label="Last Name">
                            <f:validateLength minimum="2" />
                        </p:inputText>  

                        <h:outputLabel value="#{bundle.CreateUserLabel_password} *" for="password" />
                        <p:password id="password" value="#{accountManager.password}" feedback="true" required="true" styleClass="accountInputTextField">
                            <!-- Execute the "validate" method in the "PasswordValidator.java" class file to validate the password entered. -->
                            <f:validator validatorId="passwordValidator" /> 
                        </p:password>

                        <h:outputLabel value="Confirm Password: *" for="confirmPassword" />
                        <p:password id="confirmPassword" value="ToBeReadFromThisFieldByAccountManager" required="true" styleClass="accountInputTextField"/>

                        <p:outputLabel value="#{bundle.CreateUserLabel_securityQuestion}" for="securityQuestion" />
                        <p:selectOneMenu id="securityQuestion" label="Security Questions"
                                         value="#{accountManager.securityQuestion}" required="true" >
                            <f:selectItems value="#{accountManager.security_questions}"/>
                        </p:selectOneMenu>

                        <p:outputLabel value="#{bundle.CreateUserLabel_securityAnswer}" for="securityAnswer" />
                        <p:inputText id="securityAnswer" value="#{accountManager.securityAnswer}" required="true" styleClass="accountInputTextField"
                                     requiredMessage="#{bundle.CreateUserRequiredMessage_securityAnswer}" label="Security Answer">
                            <f:validateLength minimum="2" />
                        </p:inputText>

                        <p:outputLabel value="#{bundle.CreateUserLabel_state}" for="state" />
                        <h:selectOneMenu id="state" value="#{accountManager.state}" required="true">
                            <f:selectItems value="#{accountManager.listOfStates}" var="state"
                                           itemLabel="#{state}" itemValue="#{state}" />
                        </h:selectOneMenu>

                    </p:panelGrid>
                    <div>
                        &nbsp;
                    </div>

                    <p:commandButton class="commandButton" id="Submit" value="Submit" action="#{accountManager.createAccount()}" ajax="false" icon="uiicon-extlink" />
                    &nbsp; <p:button class="commandButton" outcome="index" value="Cancel" icon="ui-icon-cancel"></p:button>

                </h:form>
                <!-- Do not enter tags after the composition line since they are ignored by JSF -->
            </div>
        </ui:define>
    </ui:composition>
</html>
